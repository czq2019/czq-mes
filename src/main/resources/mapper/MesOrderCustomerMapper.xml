<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czq.dao.MesOrderCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.czq.model.MesOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_clientname" property="orderClientname" jdbcType="VARCHAR" />
    <result column="order_productname" property="orderProductname" jdbcType="VARCHAR" />
    <result column="order_contractid" property="orderContractid" jdbcType="VARCHAR" />
    <result column="order_imgid" property="orderImgid" jdbcType="VARCHAR" />
    <result column="order_materialname" property="orderMaterialname" jdbcType="VARCHAR" />
    <result column="order_cometime" property="orderCometime" jdbcType="TIMESTAMP" />
    <result column="order_committime" property="orderCommittime" jdbcType="TIMESTAMP" />
    <result column="order_inventorystatus" property="orderInventorystatus" jdbcType="INTEGER" />
    <result column="order_salestatus" property="orderSalestatus" jdbcType="CHAR" />
    <result column="order_materialsource" property="orderMaterialsource" jdbcType="CHAR" />
    <result column="order_hurrystatus" property="orderHurrystatus" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="order_remark" property="orderRemark" jdbcType="VARCHAR" />
    <result column="order_operator" property="orderOperator" jdbcType="VARCHAR" />
    <result column="order_operate_time" property="orderOperateTime" jdbcType="TIMESTAMP" />
    <result column="order_operate_ip" property="orderOperateIp" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getOrderCount" resultType="Long">
		SELECT
		COUNT( 1 )
		FROM
		mes_order
	</select>
  	<update id="batchStart" parameterType="list">
		  update mes_order set order_status=1
		  where 
		  id in
		  <foreach item="item" index="index" collection="list"
		      open="(" separator="," close=")">
		        #{item}
		  </foreach>
	</update>
</mapper>